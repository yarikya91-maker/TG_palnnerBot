from flask import Flask
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os
import threading
import asyncio

app = Flask(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render ‚Üí Environment)
TOKEN = os.environ.get("BOT_TOKEN", "")

@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ Flask –∂–∏–≤!"

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç üí™")

def run_bot():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...")
    if not TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Render (BOT_TOKEN).")
        return

    print("‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")

    # –î–ª—è Python 3.10+ —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π event loop
    asyncio.set_event_loop(asyncio.new_event_loop())
    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))

    print("üü¢ –ó–∞–ø—É—Å–∫ Telegram polling...")
    try:
        application.run_polling()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

def run_flask():
    port = int(os.environ.get("PORT", 5000))
    print(f"üåê Flask –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host="0.0.0.0", port=port)

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞ –∏ Flask –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ...")
    threading.Thread(target=run_bot).start()
    run_flask()
