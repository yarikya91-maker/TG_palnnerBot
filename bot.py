import asyncio
import threading
from flask import Flask
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ Flask –∂–∏–≤, –±–æ—Ç —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–Ω–ª–∞–π–Ω!"

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("BOT_TOKEN")

if not TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
else:
    print("‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç üí™")

def run_bot():
    asyncio.set_event_loop(asyncio.new_event_loop())
    loop = asyncio.get_event_loop()
    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    loop.run_until_complete(application.run_polling())

def run_flask():
    port = int(os.environ.get("PORT", 10000))
    print(f"üåê Flask –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host="0.0.0.0", port=port)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    threading.Thread(target=run_bot).start()
    run_flask()
