import os
import asyncio
from flask import Flask
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

BOT_TOKEN = os.getenv("BOT_TOKEN")
PORT = int(os.environ.get("PORT", 10000))

if not BOT_TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

app = Flask(__name__)

@app.route("/")
def home():
    return "‚úÖ Flask —Ä–∞–±–æ—Ç–∞–µ—Ç, –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å üöÄ")

async def run_bot():
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    app_telegram = (
        ApplicationBuilder()
        .token(BOT_TOKEN)
        .build()
    )

    app_telegram.add_handler(CommandHandler("start", start))

    await app_telegram.run_polling(
        allowed_updates=Update.ALL_TYPES
    )

async def main():
    # –ó–∞–ø—É—Å–∫ Flask –∏ Telegram –≤ –æ–¥–Ω–æ–º —Ü–∏–∫–ª–µ
    from threading import Thread

    def run_flask():
        print(f"üåê Flask –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
        app.run(host="0.0.0.0", port=PORT)

    Thread(target=run_flask, daemon=True).start()

    await run_bot()

if __name__ == "__main__":
    asyncio.run(main())
